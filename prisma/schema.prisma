generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum ProfileType {
  student
  teacher
}

model Profile {
  id       String      @id @default(uuid()) @db.Char(36)
  email    String      @unique
  password String      @db.Char(60)
  level    Decimal     @default(0) @db.Decimal(5, 2)
  type     ProfileType @default(student)

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @map("updated_at")
  deletedAt DateTime? @map("deleted_at")
  isDeleted Boolean   @default(false) @map("is_deleted")

  student Student?
  teacher Teacher?

  @@map("profiles")
}

model Student {
  id   String @id @default(uuid()) @db.Char(36)
  name String

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @map("updated_at")
  deletedAt DateTime? @map("deleted_at")
  isDeleted Boolean   @default(false) @map("is_deleted")

  profile   Profile @relation(fields: [profileId], references: [id])
  profileId String  @unique @db.Char(36)

  @@map("students")
}

model Teacher {
  id   String @id @default(uuid()) @db.Char(36)
  name String

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @map("updated_at")
  deletedAt DateTime? @map("deleted_at")
  isDeleted Boolean   @default(false) @map("is_deleted")

  profile   Profile @relation(fields: [profileId], references: [id])
  profileId String  @unique @db.Char(36)

  @@map("teachers")
}

model Subject {
  id          Int     @id @default(autoincrement())
  name        String
  displayName String  @map("display_name")
  description String?

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @map("updated_at")
  deletedAt DateTime? @map("deleted_at")
  isDeleted Boolean   @default(false) @map("is_deleted")

  @@map("subjects")
}
